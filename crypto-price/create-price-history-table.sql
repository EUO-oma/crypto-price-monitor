-- 가격 기록 테이블 생성

-- 1. 테이블 생성
CREATE TABLE IF NOT EXISTS price_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    symbol VARCHAR(20) NOT NULL,
    price DECIMAL(20, 8) NOT NULL,
    high_price DECIMAL(20, 8),
    low_price DECIMAL(20, 8),
    date DATE NOT NULL DEFAULT CURRENT_DATE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(symbol, date)  -- 각 심볼당 날짜별로 하나의 기록만
);

-- 2. 인덱스 생성
CREATE INDEX idx_price_history_symbol ON price_history(symbol);
CREATE INDEX idx_price_history_date ON price_history(date DESC);
CREATE INDEX idx_price_history_symbol_date ON price_history(symbol, date DESC);

-- 3. RLS 활성화
ALTER TABLE price_history ENABLE ROW LEVEL SECURITY;

-- 4. RLS 정책 - 모든 사용자가 읽을 수 있음
CREATE POLICY "Anyone can read price history" ON price_history
    FOR SELECT USING (true);

-- 5. RLS 정책 - 익명 사용자도 추가/업데이트 가능 (upsert를 위해)
CREATE POLICY "Anyone can insert price history" ON price_history
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Anyone can update price history" ON price_history
    FOR UPDATE USING (true) WITH CHECK (true);

-- 6. 초기 데이터 삽입 (오늘 날짜 기준)
INSERT INTO price_history (symbol, price, high_price, low_price, date) VALUES
    ('BTCUSDT', 98000, 98500, 97500, CURRENT_DATE),
    ('ETHUSDT', 3400, 3450, 3350, CURRENT_DATE),
    ('SOLUSDT', 240, 245, 235, CURRENT_DATE)
ON CONFLICT (symbol, date) DO UPDATE SET
    price = EXCLUDED.price,
    high_price = EXCLUDED.high_price,
    low_price = EXCLUDED.low_price,
    updated_at = NOW();

-- 7. 최근 10일 샘플 데이터 생성 (테스트용)
INSERT INTO price_history (symbol, price, high_price, low_price, date) 
SELECT 
    'BTCUSDT',
    90000 + (random() * 10000),
    92000 + (random() * 8000),
    88000 + (random() * 5000),
    CURRENT_DATE - INTERVAL '1 day' * generate_series(1, 9)
ON CONFLICT (symbol, date) DO NOTHING;

INSERT INTO price_history (symbol, price, high_price, low_price, date) 
SELECT 
    'ETHUSDT',
    3200 + (random() * 400),
    3300 + (random() * 300),
    3100 + (random() * 200),
    CURRENT_DATE - INTERVAL '1 day' * generate_series(1, 9)
ON CONFLICT (symbol, date) DO NOTHING;

INSERT INTO price_history (symbol, price, high_price, low_price, date) 
SELECT 
    'SOLUSDT',
    220 + (random() * 40),
    230 + (random() * 30),
    210 + (random() * 20),
    CURRENT_DATE - INTERVAL '1 day' * generate_series(1, 9)
ON CONFLICT (symbol, date) DO NOTHING;

-- 8. 테이블 구조 확인
SELECT column_name, data_type, is_nullable
FROM information_schema.columns  
WHERE table_name = 'price_history'
ORDER BY ordinal_position;

-- 9. 데이터 확인
SELECT * FROM price_history 
ORDER BY symbol, date DESC 
LIMIT 30;

-- 10. 각 심볼별 레코드 수 확인
SELECT symbol, COUNT(*) as record_count 
FROM price_history 
GROUP BY symbol;