-- 익명 채팅 메시지 테이블 생성
CREATE TABLE IF NOT EXISTS chat_messages (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    message TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    ip_hash VARCHAR(64) -- 익명이지만 스팸 방지용 IP 해시 저장
);

-- 인덱스 생성 (정렬 및 삭제 성능 향상)
CREATE INDEX IF NOT EXISTS idx_chat_messages_created_at ON chat_messages(created_at DESC);

-- RLS 활성화
ALTER TABLE chat_messages ENABLE ROW LEVEL SECURITY;

-- RLS 정책 설정
-- 모든 사용자가 읽기 가능
CREATE POLICY "Enable read access for all users" ON chat_messages
    FOR SELECT USING (true);

-- 모든 사용자가 메시지 추가 가능 (익명 채팅)
CREATE POLICY "Enable insert for all users" ON chat_messages
    FOR INSERT WITH CHECK (
        -- 메시지 길이 제한 (최대 200자)
        LENGTH(message) <= 200
    );

-- 7일 이상 된 메시지 자동 삭제 함수
CREATE OR REPLACE FUNCTION delete_old_chat_messages()
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    DELETE FROM chat_messages
    WHERE created_at < NOW() - INTERVAL '7 days';
END;
$$;

-- 매일 자정에 실행되는 크론 작업 설정 (Supabase 대시보드에서 활성화 필요)
-- SQL Editor에서 실행 후, Supabase 대시보드 > Database > Extensions에서 pg_cron 활성화
-- 그 다음 아래 명령 실행:
/*
SELECT cron.schedule(
    'delete-old-chat-messages',
    '0 0 * * *', -- 매일 자정
    $$SELECT delete_old_chat_messages();$$
);
*/

-- 최대 100개 메시지만 유지하는 트리거 함수
CREATE OR REPLACE FUNCTION limit_chat_messages()
RETURNS TRIGGER AS $$
BEGIN
    -- 100개 이상의 메시지가 있으면 가장 오래된 것들 삭제
    DELETE FROM chat_messages
    WHERE id IN (
        SELECT id FROM chat_messages
        ORDER BY created_at DESC
        OFFSET 100
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- 트리거 생성
DROP TRIGGER IF EXISTS limit_chat_messages_trigger ON chat_messages;
CREATE TRIGGER limit_chat_messages_trigger
    AFTER INSERT ON chat_messages
    FOR EACH STATEMENT
    EXECUTE FUNCTION limit_chat_messages();